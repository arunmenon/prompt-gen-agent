# src/prompt_gen/api/routers/prompt.py
from fastapi import APIRouter, HTTPException
from ...schemas import PromptGenInput
from ...crew import PromptGenCrew

router = APIRouter()

@router.post("/create_prompt")
def create_prompt(input: PromptGenInput):
    """
    Takes userâ€™s prompt-generation requirements, runs the PromptGenCrew,
    and returns the final prompt.
    """
    crew_instance = PromptGenCrew()
    result = crew_instance.crew().kickoff(inputs=input.dict())
    # We'll get a final structured output with 'final_prompt'
    final_data = result.json_dict or result.raw

    if not final_data:
        raise HTTPException(status_code=500, detail="No prompt generated by the agentic flow.")

    # Because the refine_prompt_task returns e.g. { "final_prompt": "...", "notes": [...] }
    final_prompt = final_data.get("final_prompt")
    if not final_prompt:
        raise HTTPException(status_code=500, detail="No 'final_prompt' in the final data.")

    return {
        "status": "success",
        "final_prompt": final_prompt,
        "notes": final_data.get("notes", [])
    }
